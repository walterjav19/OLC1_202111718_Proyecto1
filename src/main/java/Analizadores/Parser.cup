/* 1. Package e importaciones */
package Analizadores; 
import java_cup.runtime.*;
import java.util.ArrayList;
import java.util.List;

/* 2. Codigo para el parser, variables, metodos */
parser code 
{:
    /**
     * Método al que se llama automáticamente ante algún error sintactico.
     **/ 
    public void syntax_error(Symbol s){ 
        System.out.println("Error Sintáctico en la Línea " + (s.left) +
        " Columna "+s.right+ ". No se esperaba este componente: " +s.value+"."); 
    } 

    /**
     * Método al que se llama automáticamente ante algún error sintáctico 
     * en el que ya no es posible una recuperación de errores.
     **/ 
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        System.out.println("Error síntactico irrecuperable en la Línea " + 
        (s.left)+ " Columna "+s.right+". Componente " + s.value + 
        " no reconocido."); 
    }  


    //Clases, objetos, variables, lista, etc... en sintaxis java
    
    //Creo una lista de tipo String llamada 'resultados', donde guardare cada uno de los resultados analizados
    public List<String> resultados = new ArrayList<String>();
:} 

/* 3. Terminales */
terminal String PTCOMA,DOSPTO,VIRG,PARIZQ,PARDER,CORIZQ,CORDER,BRADER,BRAIZQ,COM,IDENT;
terminal String ASIGN,PERCEN;
terminal String LETR,DIGITO;
terminal String CONCAT,DIS,KLE,MAS,INTER;
terminal String ENTERO;
terminal String DECIMAL;
terminal String CONJUNTO;

/* 4. No Terminales */
non terminal ini;
non terminal instrucciones;
non terminal instruccion;
non terminal conjus;
non terminal Double expresion;

/* 5. Precedencias */
//precedence left MAS,MENOS;
//precedence left POR,DIVIDIDO;

/* 6. Producciones */

start with ini; 
ini::= BRAIZQ instrucciones BRADER;

instrucciones ::= instrucciones instruccion 
                  | instrucciones error
                  | instruccion
; 

instruccion ::= 
   CONJUNTO DOSPTO IDENT ASIGN conjus PTCOMA
    {:
    
        System.out.println("Cadena Hata aqui valida");
    
    :}
;

conjus ::= LETR VIRG LETR {:System.out.println("CONJUNTO DE LETRAS ");:}
            | DIGITO VIRG DIGITO {:System.out.println("CONJUNTO DE Digitos");:}      
;


