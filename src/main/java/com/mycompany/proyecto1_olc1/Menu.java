/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.proyecto1_olc1;
import java.awt.Image;
import Analizadores.sym;
import Errores.ErrorLexico;
import Estructuras.Arbol;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.util.List;
import java_cup.runtime.Symbol;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author USUARIO
 */
public class Menu extends javax.swing.JFrame {

    /**
     * Creates new form Menu
     */
    int posicionArchivo = 0;
    public Menu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Arboles", "Siguientes", "Transiciones", "AFD", "AFND" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton2.setText("Analizar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        jButton3.setText("Cambiar Imagen");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jMenu1.setText("File");

        jMenuItem1.setText("Open");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Save");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("Save as");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 832, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(132, 132, 132)
                .addComponent(jButton3)
                .addContainerGap(370, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(384, 384, 384)
                        .addComponent(jButton2))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 537, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(527, 527, 527)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 655, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(71, 71, 71)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 485, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
//Inicio de Metodos de Lectura y Escritura
public static String leer(String path){
      File archivo = null;
      FileReader fr = null;
      BufferedReader br = null;
      String texto="";
      try {
         // Apertura del fichero y creacion de BufferedReader para poder
         // hacer una lectura comoda (disponer del metodo readLine()).
         archivo = new File (path);
         fr = new FileReader (archivo);
         br = new BufferedReader(fr);
         // Lectura del fichero
         String linea;
         while((linea=br.readLine())!=null)
            texto+=linea+"\n";
      }
      catch(Exception e){
         e.printStackTrace();
      }finally{

         try{                    
            if( null != fr ){   
               fr.close();     
            }                  
         }catch (Exception e2){ 
            e2.printStackTrace();
         }
      }
      
    return texto;
}


//Fin de Metodos de Lectura y Escritura

public static void escribir(String path,String TextField2){
        FileWriter fichero = null;
        PrintWriter pw = null;
        try
        {
            fichero = new FileWriter(path);
            pw = new PrintWriter(fichero);
            String texto=TextField2;
               
            pw.println(texto);
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
           try {
           // Nuevamente aprovechamos el finally para 
           // asegurarnos que se cierra el fichero.
           if (null != fichero)
              fichero.close();
           } catch (Exception e2) {
              e2.printStackTrace();
           }
        }
}


    public static void GenerarHtml(List<ErrorLexico> lista){
        PrintWriter escribir=null;
        try {
            String cabecera="<html>\n" +
                    "  <head>\n" +
                    "  </head>\n" +
                    "  <body>\n" +
                    "    <table border=\"7\">\n" +
                    "      <tr>\n" +
                    "        <th>Lexema</th>\n" +
                    "        <th>Línea</th>\n" +
                    "        <th>Columna</th>\n" +
                    "        <th>Descripción</th>\n" +
                    "      </tr>";
            String cuerpo="";
            for (ErrorLexico error:lista) {
                cuerpo+="      <tr>\n" +
                        "        <td>"+error.Lexema+"</td>\n" +
                        "        <td>"+Integer.toString(error.Linea)+"</td>\n" +
                        "        <td>"+Integer.toString(error.Columna)+"</td>\n" +
                        "        <td>"+error.Descripcion+"</td>\n" +
                        "      </tr>";
                
            }   String pie="    </table>\n" +
                    "  </body>\n" +
                    "</html>";  escribir = new PrintWriter(new File("C:\\\\Users\\\\USUARIO\\\\Documents\\\\NetBeansProjects\\\\Proyecto1_OLC1\\\\src\\\\main\\\\java\\\\Errores_202111718\\\\Errores.html"));
                    escribir.print(cabecera+cuerpo+pie);
                    escribir.close();
        } catch (FileNotFoundException ex) {
            System.out.println("No se encontro la carpeta");
        } finally {
            escribir.close();
        }
        
    }
    File selectedFile=null;
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        int result = fileChooser.showOpenDialog(null);
        String Texto="";
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            Texto=leer(selectedFile.getAbsolutePath());
        }
        jTextArea1.setText(Texto);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        String Texto=jTextArea1.getText();
        escribir(selectedFile.getAbsolutePath(),Texto);
        JOptionPane.showMessageDialog(null, "Su Archivo "+selectedFile.getName()+" Fue Guardado Exitosamente", "Archivo Guardado", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Save as");
        fileChooser.setSelectedFile(new File("untitled.txt"));
        int result = fileChooser.showSaveDialog(null);
        if (result == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            escribir(file.getAbsolutePath(),jTextArea1.getText());
            selectedFile=file;
            JOptionPane.showMessageDialog(null, "Su Archivo "+file.getName()+" Fue Guardado Exitosamente", "Archivo Guardado", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        System.out.println("Se eligió: " + jComboBox1.getSelectedItem().toString());
        posicionArchivo = 0;
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Analizadores.Sintactico pars;
        jTextArea2.setText("");
        try {
            PrintWriter escribir=new PrintWriter(new File("archivo.txt"));
            escribir.print(jTextArea1.getText());
            escribir.close();
        } catch (FileNotFoundException ex) {
            System.out.println("No se puede escribir archivo");
        }

        try {
            Analizadores.Lexico lex=new Analizadores.Lexico(new FileReader("archivo.txt"));
            pars=new Analizadores.Sintactico(lex);
            pars.parse();
            System.out.println("TokenID  Token              Linea Columna Valor");
            for(Symbol tok : lex.T_SIMBOLOS) {
                String tokenName = sym.terminalNames[tok.sym];
                String tokenValue = (tok.value != null) ? tok.value.toString() : "";
                System.out.format("%-9d%-20s%-6d%-8d%-20s\n", tok.sym, tokenName, tok.left, tok.right, tokenValue);
            }
            /*for (Map.Entry<String, String> entrada : pars.conjuntos.entrySet()) {
                // Obtener la llave y el valor asociado a la entrada actual
                String llave = entrada.getKey();
                String valor = entrada.getValue();

                // Imprimir el nombre del conjunto y su valor asociado
                System.out.println("Conjunto: " + llave + ", Valor: " + valor);
            }*/
            int i = 0; // inicializas i en 0

            for (Arbol arbol : pars.expresiones.values()) {

                arbol.GraficarSintactico(i+""); // llamas al metodo GraficarSintactico para el arbol

                i++; // aumentas el valor de i en 1
            }

            String txt="";
            for(String linea: pars.resultados ){
                txt+=linea+"\n";
            }

            jTextArea2.setText(txt);

            if (lex.ErroresLexicos.size()!=0){
                JOptionPane.showMessageDialog(null, "Hay errores Lexicos en la Compilacion del Programa revise la carpeta de errores","Errores Lexicos",JOptionPane.INFORMATION_MESSAGE);
                GenerarHtml(lex.ErroresLexicos);
            }

        } catch (Exception ex) {
            System.out.println("Error fatal en compilación de entrada");
            System.out.println("Causa: "+ex.getCause());
        }
         JOptionPane.showMessageDialog(null, "Archivo analizado Revise sus Imagenes","AVISO",JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String rutaImagenes = "";
        String nombreFinalImagen = "";
        if (jComboBox1.getSelectedItem().toString().equals("Arboles")) {
            rutaImagenes = "C:\\Users\\USUARIO\\Documents\\NetBeansProjects\\Proyecto1_OLC1\\src\\main\\java\\Arboles_202111718\\";
            File carpeta = new File(rutaImagenes);
            if(posicionArchivo >= carpeta.list().length)posicionArchivo = 0;
            nombreFinalImagen = carpeta.list()[posicionArchivo];
            rutaImagenes += nombreFinalImagen;
            ImageIcon imagen = new ImageIcon(rutaImagenes);
            ImageIcon icono = new ImageIcon(imagen.getImage().getScaledInstance(jLabel1.getWidth(), jLabel1.getHeight(), Image.SCALE_DEFAULT));
            jLabel1.setIcon(icono);
            jLabel1.setText(rutaImagenes);
            posicionArchivo++;
        }else if (jComboBox1.getSelectedItem().toString().equals("Siguientes")) {
            rutaImagenes = "C:\\Users\\USUARIO\\Documents\\NetBeansProjects\\Proyecto1_OLC1\\src\\main\\java\\Siguientes_202111718\\";
            File carpeta = new File(rutaImagenes);
            if(posicionArchivo >= carpeta.list().length)posicionArchivo = 0;
            nombreFinalImagen = carpeta.list()[posicionArchivo];
            rutaImagenes += nombreFinalImagen;
            ImageIcon imagen = new ImageIcon(rutaImagenes);
            ImageIcon icono = new ImageIcon(imagen.getImage().getScaledInstance(jLabel1.getWidth(), jLabel1.getHeight(), Image.SCALE_DEFAULT));
            jLabel1.setIcon(icono);
            jLabel1.setText(rutaImagenes);
            posicionArchivo++;
        }else if (jComboBox1.getSelectedItem().toString().equals("Transiciones")) {
            rutaImagenes = "C:\\Users\\USUARIO\\Documents\\NetBeansProjects\\Proyecto1_OLC1\\src\\main\\java\\Transiciones_202111718\\";
            File carpeta = new File(rutaImagenes);
            if(posicionArchivo >= carpeta.list().length)posicionArchivo = 0;
            nombreFinalImagen = carpeta.list()[posicionArchivo];
            rutaImagenes += nombreFinalImagen;
            ImageIcon imagen = new ImageIcon(rutaImagenes);
            ImageIcon icono = new ImageIcon(imagen.getImage().getScaledInstance(jLabel1.getWidth(), jLabel1.getHeight(), Image.SCALE_DEFAULT));
            jLabel1.setIcon(icono);
            jLabel1.setText(rutaImagenes);
            posicionArchivo++;
        }else if (jComboBox1.getSelectedItem().toString().equals("AFD")) {
            rutaImagenes = "C:\\Users\\USUARIO\\Documents\\NetBeansProjects\\Proyecto1_OLC1\\src\\main\\java\\AFD_202111718\\";
            File carpeta = new File(rutaImagenes);
            if(posicionArchivo >= carpeta.list().length)posicionArchivo = 0;
            nombreFinalImagen = carpeta.list()[posicionArchivo];
            rutaImagenes += nombreFinalImagen;
            ImageIcon imagen = new ImageIcon(rutaImagenes);
            ImageIcon icono = new ImageIcon(imagen.getImage().getScaledInstance(jLabel1.getWidth(), jLabel1.getHeight(), Image.SCALE_DEFAULT));
            jLabel1.setIcon(icono);
            jLabel1.setText(rutaImagenes);
            posicionArchivo++;
        }else if (jComboBox1.getSelectedItem().toString().equals("AFND")) {
            rutaImagenes = "C:\\Users\\USUARIO\\Documents\\NetBeansProjects\\Proyecto1_OLC1\\src\\main\\java\\AFND_202111718\\";
            File carpeta = new File(rutaImagenes);
            if(posicionArchivo >= carpeta.list().length)posicionArchivo = 0;
            nombreFinalImagen = carpeta.list()[posicionArchivo];
            rutaImagenes += nombreFinalImagen;
            ImageIcon imagen = new ImageIcon(rutaImagenes);
            ImageIcon icono = new ImageIcon(imagen.getImage().getScaledInstance(jLabel1.getWidth(), jLabel1.getHeight(), Image.SCALE_DEFAULT));
            jLabel1.setIcon(icono);
            jLabel1.setText(rutaImagenes);
            posicionArchivo++;
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    // End of variables declaration//GEN-END:variables
}
